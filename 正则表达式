正则表达式
1、正则表达式的组成
正则表达式也是一个字符串，包括元字符、限定符和正常意义的字符。正则表达式强大的地方就在元字符和限定符。

2、限定符

限定符是表示前面字符或元字符出现的次数。主要限定符如下：

限定符	含义
*	表示前面字符或元字符出现0次或多次。例如：zo*m，可以匹配zm，zom，zoom
+	表示前面字符或元字符出现1次或多次。例如：zo+m，可以匹配zom，zoom
？	表示前面字符或元字符出现0次或1次。例如：zo?m，可以匹配zm，zom
{n}	表示前面字符或元字符出现n次。例如：zo{3}m，可以匹配zooom
{n,m}	表示前面字符或元字符出现n到m次。例如：zo{1,3}m，可以匹配zom，zoom，zooom
{n,}	表示前面字符或元字符至少出现n次。例如：zo{2,}m，可以匹配zoom，zooom等等
正则表达式还有个规则叫贪婪与懒惰。默认为贪婪，即没有对其任何限制的情况下，正则表达式会尽可能多匹配符合条件的结果

字符串“n123n456n789n”在规则（n.+n）  下的结果是最长匹配，即：n123n456n789n
                                           在规则（n.+?n）下的结果是最短匹配，即：n123n

3、元字符

元字符是用于匹配字符串，可以代表一定含义或规律的字符串。主要的元字符如下：

元字符	含义
.	小数点，代表除了换行符以外的任意字符
\	转义，若我想匹配一些被正则表达式占用的字符，例如小数点，可以用\.
[abc]	匹配中括号内的任一个字符，例如[a-zA-Z]，可以匹配到大小写字母
[^abc]	不匹配中括号内的字符，例如[^a-z]，表示不匹配小写字母
\w	可以匹配字母、下划线和数字，相当于[a-zA-Z0-9_]，注意汉字都不匹配
\W	大写的W是小写的w相反情况，也就是不匹配字母、下划线和数字。相当于[^a-zA-Z0-9_]
\s	匹配任意空白符，相当于[\f\n\r\t\v]
\S	匹配任意非空符，相当于[^\f\n\r\t\v]或[^\s]
\d	匹配数字，相当于[0-9]
\D	匹配非数字，相当于[^0-9]
\b	匹配单词的边界。这个匹配英文单词特别有用。例如\b[\w']+?\b就可以匹配任意单词了
\f	匹配换页符
\n	匹配换行符
\r	匹配回车符
\t	匹配tab制表符
\v	匹配垂直制表符
^	不在中括号内的^，表示从字符串的开头开始匹配
$	表示匹配到字符串的结尾
x|y	匹配x或y
(表达式)	元组，用小括号括起来的表达式当作一个元组，可以当作一个整体，也可以被\1\2\3这样类似索引获取。
譬如想匹配全部任意字符，包括换行符。可以用[\s\S]，就可以匹配全部任意字符。其他例子如：

1）匹配邮编，邮编是6位数字。正则表达式：\d{6}

2）匹配手机，手机号是11位数字。正则表达式：\d{11}

3）匹配电话，电话是区号-号码组成，区号有3到4位，号码有6到9位。正则表达式：\d{3,4}-\d{6,9}

4）匹配日期，日期格式如1992-5-30，明显数字加横线组成。正则表达式：\d{4}-\d{1,2}-\d{1,2}

5）匹配汉字，汉字需要通过编码转义，汉字都unicode编码中都在一个范围内。正则表达式：[\u4e00-\u9fa5]

4、vba中使用正则表达式

vba使用正则表达式需要用到一个RegExp对象。该对象可以通过引用Microsoft VBScript Regular Expressions 5.5。再声明定义：

Dim reg As New RegExp
还可以直接用CreateObject方法创建：

Dim reg As Object
set reg = CreateObject("VBScript.Regexp")
创建RegExp对象之后，看看它的相关属性和方法。

属性：

1）Global，影响Execute（查找）和Replace（替换）两个方法，若False则运行到第一个结果后就停止。否则执行完。默认为False

2）IgnoreCase，是否忽略大小写，默认False，表示区别大小写。True

3）Multiline，是否跨行匹配，默认False，主要影响^和$俩元字符的指代位置

False(缺省值），不进行多行查找。在Pattern 属性中写"^" 则匹配字符串的开始位置，而 "$" 匹配字符串的结束位置。

True，进行多行查找。 在Pattern 属性中写"^" 匹配字符串开始位置以及换行回车符"\n" 或 "\r" 之后的位置，而 "$" 匹配字符串结束位置以及 "\n" 或 "\r" 之前的位置。

4）Pattern，获取或设置正则表达式。

方法：

1）Execute，执行匹配

2）Replace，根据正确表达式全部替换

3）Test，测试正则表达式能否匹配到内容

在执行RegEx.Execute之后，其返回值是MatchCollection对象，它是集合对象，其中的item是Match对象，具体如下：

MatchCollection对象与Match对象
匹配到的所有对象放在MatchCollection集合中，这个集合对象只有两个只读属性：
Count：匹配到的对象的数目
Item：集合的又一通用方法，需要传入Index值获取指定的元素。

一般，可以使用For Each语句枚举集合中的对象。集合中对象的类型是Match。
Match对象有以下几个只读的属性：
FirstIndex - 匹配字符串在整个字符串中的位置，值从0开始。
Length - 匹配字符串的长度。
Value - 匹配的字符串。
SubMatches - 集合，匹配字符串中每个分组的值。作为集合类型，有Count和Item两个属性。
